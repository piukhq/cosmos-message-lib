name: ci

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  release:
    types: [published]

jobs:
  tests:
    name: tests
    runs-on: ubuntu-latest
    env:
      RABBITMQ_DSN: "amqp://guest:guest@127.0.0.1:5672/"
    services:
      rabbitmq:
        image: rabbitmq
        ports:
          - 5672:5672
        env:
          RABBITMQ_DEFAULT_USER: guest
          RABBITMQ_DEFAULT_PASS: guest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v2
        with:
          python-version: "3.11"
      - run: pip install poetry
      - run: poetry config virtualenvs.create false
      - run: poetry install -E cosmos-schemas
      - run: xenon --no-assert --max-average A --max-modules B --max-absolute B .
      - run: black --check .
      - run: isort --check .
      - run: mypy .
      - run: ruff .
      - run: pytest --verbose --cov message_lib --cov-report term-missing
  create_tag_release:
    if: github.event_name == 'release' && github.event.action == 'published'
    name: create_tag_release
    runs-on: ubuntu-latest
    needs: [tests]
    steps:
      - uses: actions/checkout@v3
      - name: tag_check
        run: |
          if ! [[ ${{ github.event.release.tag_name }} =~ [0-9]+.[0-9]+.[0-9]+ ]]; then
            exit 1;
          fi
      - uses: actions/setup-python@v2
        with:
          python-version: "3.11"
      - run: pip install poetry
      - run: poetry self add "poetry-dynamic-versioning[plugin]"
      - run: poetry config repositories.pypicloud https://pypi.tools.uksouth.bink.sh/simple
      - run: poetry config http-basic.pypicloud c02bed7a-4224-4fb4-82ad-17499e4d0e4a ${{ secrets.PYPICLOUD_PASSWORD }}
      - run: poetry build
      - run: poetry publish -r pypicloud
